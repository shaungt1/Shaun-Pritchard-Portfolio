# -*- coding: utf-8 -*-
"""Vacuum-cleaner agent_HW1_CAP6635.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vzI76XtBQmdgvpOj1vLdM7Kz0GIFgDmy

- **Engineer: Shaun Pritchard**
- **Date: 1/27/2023**
- **Task: vacuum-cleaner agent Pseduo code** 
- **Artifical Intellgence CAP 6635**

The sense_environment() function calls the get_current_location() function to determine the agent's current location. Then it calls the get_environment_state(location) function to determine the state of the environment at that location and returns the current state. The specific implementation of get_current_location() and get_environment_state(location) will depend on the specific details of the agent's task environment.
"""

def sense_environment():
    current_location = get_current_location()
    current_state = get_environment_state(current_location)
    return current_state

def get_current_location():
    # code to determine the agent's current location
    return current_location

def get_environment_state(location):
    # code to determine the state of the environment at the given location
    return environment_state



"""The vacuum-cleaner agent starts at location A and initially perceives the environment as "Unknown". It enters a continuous loop where it senses the environment, checks the current state and takes appropriate action. If the environment is dirty, it takes the "Suck" action. If the environment is clean, it checks how long it has been clean and if it's been clean for two consecutive time steps, it will move to a different location based on its current location, and reset the consecutive_clean_time variable. If the environment is unknown, it will check how long it has been unknown and if it's been unknown for two consecutive time steps, it will move to a different location based on its current location, and reset the consecutive_unknown_time variable."""

# Start at location A
current_location = A
previous_location = "Clean"
consecutive_clean_time = 0

while True:
    environment_state = sense_environment() # function to sense the environment and return state (Clean, Dirty, Unknown)
    
    if environment_state == "Dirty":
        action = "Suck"
    elif environment_state == "Clean":
        action = "Idle"
        consecutive_clean_time += 1
        if consecutive_clean_time == 2:
            if current_location == "A":
                action = "Right"
            elif current_location == "B":
                action = random.choice(["Left", "Right"])
            elif current_location == "C":
                action = "Left"
            previous_location = "Clean"
            consecutive_clean_time = 0
    elif environment_state == "Unknown":
        action = "Idle"
        if previous_location == "Unknown":
            consecutive_unknown_time += 1
            if consecutive_unknown_time == 2:
                if current_location == "A":
                    action = "Right"
                elif current_location == "B":
                    action = random.choice(["Left", "Right"])
                elif current_location == "C":
                    action = "Left"
                previous_location = "Unknown"
                consecutive_unknown_time = 0
        else:
            previous_location = "Unknown"
            consecutive_unknown_time = 0
    else:
        print("Error: Invalid environment state")
        break
        
    execute_action(action) # function to execute the chosen action
    current_location = update_location(current_location, action) # function to update the current location based on the action taken