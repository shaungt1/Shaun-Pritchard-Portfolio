# -*- coding: utf-8 -*-
"""QMB4400-MOD4_Storing Output.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zq_7SEbJHDa8sp8odvecFzDDC6ktuVnw

# **Storing Output**

# **Module 04 Course Project - Storing Output**

<hr>

### Course Project Module 4:
Then write a Python script that can perform following tasks.

- Step 1: Create two tables inside SQLite database
- Step 2: Store following outputs


Neighbourhood, count(No-Shows=Yes)

PatientID, count(No-Shows=Yes)

## **Importing Libaries**
"""

# loading libraries
import sqlite3 as sql
import pandas as pd
import numpy as np

"""## **Importing the Dataset**"""

# Load data to dataframe
df = pd.read_csv('/content/noshowappointments.csv', encoding='iso-8859-1')

# Check Data
df.head()

# Create new dataframe wiht only YES values in feature column No-Show
df1 = df[df['No-show']=="Yes"]

# Total number of patients with No-Show equal to Yes 
df1.shape

tb1 = df1.PatientId.value_counts(dropna=True)

# Check Data tb1
tb1.head()

tb2 = df1.Neighbourhood.value_counts(dropna=True)

# Check Data tb2
tb2.head()

# Create Mysql Connection
conn = sql.connect('apt.db')

# Create table 1 PatientId
df1.to_sql('PatientId', conn)

# Create table 1 PatientId
df1.to_sql('Neighbourhood', conn)

# Read SQL data into a new variable select all collumns and rows
sql1 = pd.read_sql('SELECT * FROM PatientId', conn)

# Read SQL data into a new variable select all collumns and rows
sql2 = pd.read_sql('SELECT * FROM Neighbourhood', conn)

# Check Data sql 1
sql1.head()

# Check Data sql 2
sql2.head()

# Join tables for easy visulization
output = pd.concat([sql1, sql2], axis=0)

# Check final output
output.head()

# Verify Join of output
output.shape

# Print SQL joined tables to an output File
output.to_csv(r'NoShowOutput_mod4.csv', header=True, index=False, sep=',', mode='w', encoding= 'UTF8')