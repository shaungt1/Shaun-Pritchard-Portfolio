# -*- coding: utf-8 -*-
"""QMB4400_MOD5_DisplayVisualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yIz-qs9D-IiyhtOuZeXFIWnvWaWG9Cdu

# **Module 05 Course Project - Display Visualization**

<hr>

### Course Project Module 5:
Write a Python script that can perform following tasks.

- Step 1: Group Neighbourhood and display the count(No-Show=Yes)
- Step 2: Use matplotlib to draw line chart (x-axis Neighbourhood and y-axis count)

### **Import Libaries**
"""

# loading libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sn
from matplotlib.backends.backend_pdf import PdfPages
import matplotlib
# Customize matplotlib
matplotlib.rcParams.update(
    {
        'text.usetex': False,
        'font.family': 'stixgeneral',
        'mathtext.fontset': 'stix',
    }
)
from matplotlib import font_manager as fm, rcParams
# import warnings
# warnings.filterwarnings('ignore')

"""### **Import Data**"""

# Load data to dataframe
df = pd.read_csv('/content/noshowappointments.csv', encoding='iso-8859-1')

# Check Data
df.head()

"""### **Process Data**"""

# Create new dataframe wiht only YES values in feature column No-Show
df1 = df[df['No-show']=="Yes"]

# Total number of patients with No-Show equal to Yes 
df1.shape

# Check new dataframe validation No-show = Yes
df1.head()



"""### **Clean Data**"""

# Drop null values
df1.dropna()
df1.count(0)

"""### **Encode Feature Colums X & Y**"""

# Seperate categorical Varibles
obj_df = df1.select_dtypes(include=['object']).copy()
obj_df.head()

#  Convert Neighbourhood & Count column to a category
obj_df["Neighbourhood"] = obj_df["Neighbourhood"].astype('category')
obj_df["Count"] = obj_df["Neighbourhood"].value_counts().astype('category')
obj_df.dtypes

# Encode Neighbourhood and count column feature
obj_df["Neighbourhood_cat"] = obj_df["Neighbourhood"].cat.codes
obj_df["Count"] = obj_df["Neighbourhood"].cat.codes
obj_df.head(5)

"""### **Pre-Proccess Visual Data**"""

# Use encoded column vector to set X & Y varibles for trend line
x = obj_df['Neighbourhood_cat']
y = obj_df['Count']



"""### **Visualize Data**"""

# Setup PDF output file for chart
with PdfPages(r'/content/Mod5CourseProjectChartpdf') as export_pdf:
  # Plot line graph with trend line for better visulization
  df1['Neighbourhood'].value_counts().plot.line(x= 'Neighbourhood', y= 'Count',  figsize=[18,8], colormap='spring', title="Neighbourhood Count")
 
 

  #Plot Trend Line
  z = np.polyfit(x, y, 1)
  p = np.poly1d(z)
  plt.plot(x,p(x),"r--")

  #Plot X & Y Axis labels
  plt.xlabel('Neighbourhood', fontsize=14)
  plt.ylabel('Count', fontsize=14)

  # Plot grid
  plt.grid(True)
  # Send plot to PDF with data output:
  export_pdf.savefig()